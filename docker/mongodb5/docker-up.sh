#!/bin/bash

# https://dev.to/efe136/how-to-enable-mongodb-authentication-with-docker-compose-2nbp

cname="mongo1" 

#mongod --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/home/raychorn/__projects/portainer-ce/docker/mongodb5/mongocerts/user.pem" --sslCAFile "/home/raychorn/__projects/portainer-ce/docker/mongodb5/mongocerts/my.crt"

#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata1,target=/data/db --mount type=volume,source=mongoconf1,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb1,target=/data/configdb --constraint 'node.labels.mongo.replica == 1' --name mongo1 mongo:5.0.1-focal --replSet "rs0"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata2,target=/data/db --mount type=volume,source=mongoconf2,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb2,target=/data/configdb --constraint 'node.labels.mongo.replica == 2' --name mongo2 mongo:5.0.1-focal --replSet "rs0"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata3,target=/data/db --mount type=volume,source=mongoconf3,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb3,target=/data/configdb --constraint 'node.labels.mongo.replica == 3' --name mongo3 mongo:5.0.1-focal --replSet "rs0"

docker service create --limit-cpu "10.0" --limit-memory "2g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata1,target=/data/db --mount type=volume,source=mongoconf1,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb1,target=/data/configdb --mount type=volume,source=mongocerts1,target=/mongocerts --mount type=volume,source=mongologs1,target=/var/log/mongodb --constraint 'node.labels.mongo.replica == 1' --name mongo1 mongo:5.0.1-focal --replSet "rs0" --auth --keyFile "/mongocerts/keyfile.txt" #--config "/etc/mongod.conf/mongod.conf"
docker service create --limit-cpu "8.0" --limit-memory "2g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata2,target=/data/db --mount type=volume,source=mongoconf2,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb2,target=/data/configdb --mount type=volume,source=mongocerts2,target=/mongocerts --mount type=volume,source=mongologs2,target=/var/log/mongodb --constraint 'node.labels.mongo.replica == 2' --name mongo2 mongo:5.0.1-focal --replSet "rs0" --auth --keyFile "/mongocerts/keyfile.txt" #--config "/etc/mongod.conf/mongod.conf"
docker service create --limit-cpu "10.0" --limit-memory "2g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata3,target=/data/db --mount type=volume,source=mongoconf3,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb3,target=/data/configdb --mount type=volume,source=mongocerts3,target=/mongocerts --mount type=volume,source=mongologs3,target=/var/log/mongodb --constraint 'node.labels.mongo.replica == 3' --name mongo3 mongo:5.0.1-focal --replSet "rs0" --auth --keyFile "/mongocerts/keyfile.txt" #--config "/etc/mongod.conf/mongod.conf"


#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata1,target=/data/db --mount type=volume,source=mongoconf1,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb1,target=/data/configdb --constraint 'node.labels.mongo.replica == 1' --name mongo1 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/srv/mongocerts/user.pem" --sslCAFile "/srv/mongocerts/my.crt"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata2,target=/data/db --mount type=volume,source=mongoconf2,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb2,target=/data/configdb --constraint 'node.labels.mongo.replica == 2' --name mongo2 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/srv/mongocerts/user.pem" --sslCAFile "/srv/mongocerts/my.crt"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata3,target=/data/db --mount type=volume,source=mongoconf3,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb3,target=/data/configdb --constraint 'node.labels.mongo.replica == 3' --name mongo3 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/srv/mongocerts/user.pem" --sslCAFile "/srv/mongocerts/my.crt"


#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata1,target=/data/db --mount type=volume,source=mongoconf1,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb1,target=/data/configdb --mount type=volume,source=mongocerts1,target=/mongocerts --constraint 'node.labels.mongo.replica == 1' --name mongo1 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/mongocerts/user.pem" --sslCAFile "/mongocerts/my.crt"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata2,target=/data/db --mount type=volume,source=mongoconf2,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb2,target=/data/configdb --mount type=volume,source=mongocerts2,target=/mongocerts --constraint 'node.labels.mongo.replica == 2' --name mongo2 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/mongocerts/user.pem" --sslCAFile "/mongocerts/my.crt"
#docker service create --limit-cpu "6.0" --limit-memory "1g" --dns "10.0.0.196" --reserve-cpu "6.0" --reserve-memory "1512m" --replicas 1 --network host --mount type=volume,source=mongodata3,target=/data/db --mount type=volume,source=mongoconf3,target=/etc/mongod.conf  --mount type=volume,source=mongoconfigdb3,target=/data/configdb --mount type=volume,source=mongocerts3,target=/mongocerts --constraint 'node.labels.mongo.replica == 3' --name mongo3 mongo:5.0.1-focal --replSet "rs0" --clusterAuthMode x509 --sslMode requireSSL --sslPEMKeyFile "/mongocerts/user.pem" --sslCAFile "/mongocerts/my.crt"

CID=$(docker ps -qf "name=$cname")
echo "CID=$CID"

